{"ast":null,"code":"export const getFormattedDate=()=>{// Get the current date and time\nlet currentDate=new Date();// Define arrays for month and day names\nconst months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];const days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];// Extract components\nlet dayName=days[currentDate.getDay()];let monthName=months[currentDate.getMonth()];let day=currentDate.getDate();let year=currentDate.getFullYear();let hours=currentDate.getHours();let minutes=currentDate.getMinutes();// Convert to 12-hour format and determine AM/PM\nlet ampm=hours>=12?'PM':'AM';hours=hours%12;hours=hours?hours:12;// the hour '0' should be '12'\n// Add a leading zero to minutes if needed\nminutes=minutes<10?'0'+minutes:minutes;// Create the formatted date string\nreturn`${dayName}, ${monthName} ${day}, ${year}, ${hours}:${minutes} ${ampm}`;};","map":{"version":3,"names":["getFormattedDate","currentDate","Date","months","days","dayName","getDay","monthName","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","ampm"],"sources":["C:/Users/Development/Desktop/resource-link/frontend/src/utils/dateUtils.js"],"sourcesContent":["export const getFormattedDate = () => {\r\n  // Get the current date and time\r\n  let currentDate = new Date();\r\n\r\n  // Define arrays for month and day names\r\n  const months = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  const days = [\r\n    \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n  ];\r\n\r\n  // Extract components\r\n  let dayName = days[currentDate.getDay()];\r\n  let monthName = months[currentDate.getMonth()];\r\n  let day = currentDate.getDate();\r\n  let year = currentDate.getFullYear();\r\n  let hours = currentDate.getHours();\r\n  let minutes = currentDate.getMinutes();\r\n\r\n  // Convert to 12-hour format and determine AM/PM\r\n  let ampm = hours >= 12 ? 'PM' : 'AM';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n  // Add a leading zero to minutes if needed\r\n  minutes = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n  // Create the formatted date string\r\n  return `${dayName}, ${monthName} ${day}, ${year}, ${hours}:${minutes} ${ampm}`;\r\n}; "],"mappings":"AAAA,MAAO,MAAM,CAAAA,gBAAgB,CAAGA,CAAA,GAAM,CACpC;AACA,GAAI,CAAAC,WAAW,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAE5B;AACA,KAAM,CAAAC,MAAM,CAAG,CACb,SAAS,CAAE,UAAU,CAAE,OAAO,CAAE,OAAO,CAAE,KAAK,CAAE,MAAM,CACtD,MAAM,CAAE,QAAQ,CAAE,WAAW,CAAE,SAAS,CAAE,UAAU,CAAE,UAAU,CACjE,CAED,KAAM,CAAAC,IAAI,CAAG,CACX,QAAQ,CAAE,QAAQ,CAAE,SAAS,CAAE,WAAW,CAAE,UAAU,CAAE,QAAQ,CAAE,UAAU,CAC7E,CAED;AACA,GAAI,CAAAC,OAAO,CAAGD,IAAI,CAACH,WAAW,CAACK,MAAM,CAAC,CAAC,CAAC,CACxC,GAAI,CAAAC,SAAS,CAAGJ,MAAM,CAACF,WAAW,CAACO,QAAQ,CAAC,CAAC,CAAC,CAC9C,GAAI,CAAAC,GAAG,CAAGR,WAAW,CAACS,OAAO,CAAC,CAAC,CAC/B,GAAI,CAAAC,IAAI,CAAGV,WAAW,CAACW,WAAW,CAAC,CAAC,CACpC,GAAI,CAAAC,KAAK,CAAGZ,WAAW,CAACa,QAAQ,CAAC,CAAC,CAClC,GAAI,CAAAC,OAAO,CAAGd,WAAW,CAACe,UAAU,CAAC,CAAC,CAEtC;AACA,GAAI,CAAAC,IAAI,CAAGJ,KAAK,EAAI,EAAE,CAAG,IAAI,CAAG,IAAI,CACpCA,KAAK,CAAGA,KAAK,CAAG,EAAE,CAClBA,KAAK,CAAGA,KAAK,CAAGA,KAAK,CAAG,EAAE,CAAE;AAE5B;AACAE,OAAO,CAAGA,OAAO,CAAG,EAAE,CAAG,GAAG,CAAGA,OAAO,CAAGA,OAAO,CAEhD;AACA,MAAO,GAAGV,OAAO,KAAKE,SAAS,IAAIE,GAAG,KAAKE,IAAI,KAAKE,KAAK,IAAIE,OAAO,IAAIE,IAAI,EAAE,CAChF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}