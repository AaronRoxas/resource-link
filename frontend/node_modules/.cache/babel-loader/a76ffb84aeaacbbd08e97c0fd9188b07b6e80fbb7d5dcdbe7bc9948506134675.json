{"ast":null,"code":"export const getFormattedDate = () => {\n  // Get the current date and time\n  let currentDate = new Date();\n\n  // Define arrays for month and day names\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  // Extract components\n  let dayName = days[currentDate.getDay()];\n  let monthName = months[currentDate.getMonth()];\n  let day = currentDate.getDate();\n  let year = currentDate.getFullYear();\n  let hours = currentDate.getHours();\n  let minutes = currentDate.getMinutes();\n\n  // Convert to 12-hour format and determine AM/PM\n  let ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n\n  // Add a leading zero to minutes if needed\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n\n  // Create the formatted date string\n  return `${dayName}, ${monthName} ${day}, ${year}, ${hours}:${minutes} ${ampm}`;\n};","map":{"version":3,"names":["getFormattedDate","currentDate","Date","months","days","dayName","getDay","monthName","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes","ampm"],"sources":["C:/Users/Development/Desktop/resource-link/frontend/src/utils/dateUtils.js"],"sourcesContent":["export const getFormattedDate = () => {\r\n  // Get the current date and time\r\n  let currentDate = new Date();\r\n\r\n  // Define arrays for month and day names\r\n  const months = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  const days = [\r\n    \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n  ];\r\n\r\n  // Extract components\r\n  let dayName = days[currentDate.getDay()];\r\n  let monthName = months[currentDate.getMonth()];\r\n  let day = currentDate.getDate();\r\n  let year = currentDate.getFullYear();\r\n  let hours = currentDate.getHours();\r\n  let minutes = currentDate.getMinutes();\r\n\r\n  // Convert to 12-hour format and determine AM/PM\r\n  let ampm = hours >= 12 ? 'PM' : 'AM';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n\r\n  // Add a leading zero to minutes if needed\r\n  minutes = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n  // Create the formatted date string\r\n  return `${dayName}, ${monthName} ${day}, ${year}, ${hours}:${minutes} ${ampm}`;\r\n}; "],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;EACpC;EACA,IAAIC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;;EAE5B;EACA,MAAMC,MAAM,GAAG,CACb,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;EAED,MAAMC,IAAI,GAAG,CACX,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAC7E;;EAED;EACA,IAAIC,OAAO,GAAGD,IAAI,CAACH,WAAW,CAACK,MAAM,CAAC,CAAC,CAAC;EACxC,IAAIC,SAAS,GAAGJ,MAAM,CAACF,WAAW,CAACO,QAAQ,CAAC,CAAC,CAAC;EAC9C,IAAIC,GAAG,GAAGR,WAAW,CAACS,OAAO,CAAC,CAAC;EAC/B,IAAIC,IAAI,GAAGV,WAAW,CAACW,WAAW,CAAC,CAAC;EACpC,IAAIC,KAAK,GAAGZ,WAAW,CAACa,QAAQ,CAAC,CAAC;EAClC,IAAIC,OAAO,GAAGd,WAAW,CAACe,UAAU,CAAC,CAAC;;EAEtC;EACA,IAAIC,IAAI,GAAGJ,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;EACpCA,KAAK,GAAGA,KAAK,GAAG,EAAE;EAClBA,KAAK,GAAGA,KAAK,GAAGA,KAAK,GAAG,EAAE,CAAC,CAAC;;EAE5B;EACAE,OAAO,GAAGA,OAAO,GAAG,EAAE,GAAG,GAAG,GAAGA,OAAO,GAAGA,OAAO;;EAEhD;EACA,OAAO,GAAGV,OAAO,KAAKE,SAAS,IAAIE,GAAG,KAAKE,IAAI,KAAKE,KAAK,IAAIE,OAAO,IAAIE,IAAI,EAAE;AAChF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}